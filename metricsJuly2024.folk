Commit { Claim $this has metrics { \
  time 0 \
  branch ___ \
  commit {time 0 description ___} \
  uptime 0 \
  fps "00 fps" \
  step {us 00 fps 00}
}}

proc leftpad {number {width 5}} {
    return [format "%0${width}d" [expr {round($number)}]]
}

When $this has region /r/ {
  set center [region centroid $r]
  Wish $this is titled "METRICS"

  When the clock time is /t/ & $this has metrics /metricsDict/ {
      Commit { Claim $this has metrics [dict create \
         time $t \
         branch [lindex [split [exec git status] "\n"] 0] \
         commit [dict create time [exec git log -1 --format=%cd] description [exec git log -1 --format=%s]] \
         uptime [exec uptime -p] \
         fps [regsub {.*\(([0-9]+ fps)\).*} $::displayTime {\1}] \
         step [dict create \
            us [regsub {^render\s+(\d+)\s+us.*} $::displayTime {\1}] \
            fps [regsub {.*\((\d+)\s+fps\).*} $::displayTime {\1}] \
        ] \
      ]}

    Wish $this is labelled "\n
      ==== Metrics ====
      Folk clock time: [leftpad [dict get $metricsDict time] 8]
            Step time: ([leftpad [dict get $metricsDict step fps] 3] fps) | ([leftpad [dict get $metricsDict step us]] us)
          Camera time: ??? us
        AprilTag time: ??? us
               Uptime: [dict get $metricsDict uptime]

        [dict get $metricsDict branch]
 
        Most recent commit:
        -------------------
        [dict get $metricsDict commit time] [dict get $metricsDict commit description]

        $::cameraTime
        $::aprilTime
      " with font VictorMonoRegular
  }
}